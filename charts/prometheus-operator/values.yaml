global:
  rbac:
    create: true
  serviceMonitor:
    labels: {}

## Manages Prometheus and Alertmanager components
##
prometheusOperator:
  enabled: true

  # -- Namespaces to scope the interaction of the Prometheus Operator and the apiserver (allow list).
  # This is mutually exclusive with denyNamespaces. Setting this to an empty object will disable the configuration
  namespaces: {}
    # releaseNamespace: true
    # additional:
    # - kube-system

  # -- Namespaces not to scope the interaction of the Prometheus Operator (deny list).
  denyNamespaces: []

  # -- Service account for Prometheus operator to use.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
    create: true
    name: ""

  # -- Configuration for Prometheus operator service
  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    # -- Port to expose on each node
    # Only used if service.type is 'NodePort'
    nodePort: 30080

    nodePortTls: 30443

    # -- Additional ports to open for Prometheus service
    # ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services
    additionalPorts: []

    # -- Loadbalancer IP
    # Only use if service.type is "loadbalancer"
    loadBalancerIP: ""
    loadBalancerSourceRanges: []

    # -- Service type
    # NodePort, ClusterIP, loadbalancer
    type: ClusterIP

    # -- List of IP addresses at which the Prometheus server service is available
    # Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    externalIPs: []

  # -- Labels to add to the operator pod
  podLabels: {}

  # -- Annotations to add to the operator pod
  podAnnotations: {}

  # -- Assign a PriorityClassName to pods if set
  priorityClassName: "secure-cloud-stack-technical-operations-critical"

  # -- Define Log Format
  # Use logfmt (default) or json-formatted logging
  logFormat: logfmt

  ## Decrease log verbosity to errors only
  # logLevel: error

  # -- If true, the operator will create and maintain a service for scraping kubelets
  # ref: https://github.com/coreos/prometheus-operator/blob/master/helm/prometheus-operator/README.md
  kubeletService:
    enabled: true
    namespace: kube-system

  # -- Create a servicemonitor for the operator
  serviceMonitor:
    # -- Scrape interval. If not set, the Prometheus default scrape interval is used.
    interval: ""
    # -- Scrape timeout. If not set, the Prometheus default scrape timeout is used.
    scrapeTimeout: ""
    selfMonitor: true

    # -- metric relabel configs to apply to samples before ingestion.
    metricRelabelings: []
    # - action: keep
    #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
    #   sourceLabels: [__name__]

    # -- relabel configs to apply to samples before ingestion.
    relabelings: []
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   targetLabel: nodename
    #   replacement: $1
    #   action: replace

  # -- Resource limits & requests
  resources:
    limits:
      memory: 192Mi
    requests:
      cpu: 150m
      memory: 192Mi

  # -- Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),
  # because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working
  hostNetwork: false

  # -- Define which Nodes the Pods are scheduled on.
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for use with node taints
  # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

  # -- Assign custom affinity rules to the prometheus operator
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kubernetes.io/e2e-az-name
    #         operator: In
    #         values:
    #         - e2e-az1
    #         - e2e-az2

  securityContext:
    fsGroup: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534

  # -- Prometheus-operator image
  image:
    repository: quay.io/prometheus-operator/prometheus-operator
    tag: ""
    sha: ""
    pullPolicy: Always

  # -- Prometheus-config-reloader image to use for config and rule reloading
  prometheusConfigReloaderImage:
    repository: quay.io/prometheus-operator/prometheus-config-reloader
    tag: ""
    sha: ""

  # -- Set the prometheus config reloader side-car CPU limit
  configReloaderCpu: 100m

  # -- Set the prometheus config reloader side-car memory limit
  configReloaderMemory: 25Mi

  # -- Hyperkube image to use when cleaning up
  hyperkubeImage:
    repository: registry.k8s.io/hyperkube
    tag: v1.18.20
    sha: ""
    pullPolicy: Always
