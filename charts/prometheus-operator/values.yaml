global:
  rbac:
    create: true
    pspEnabled: true
    pspAnnotations: {}
      ## Specify pod annotations
      ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor
      ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp
      ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#sysctl
      ##
      # seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
      # seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'
      # apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
  serviceMonitor:
    labels: {}

## Manages Prometheus and Alertmanager components
##
prometheusOperator:
  enabled: true

  # If true prometheus operator will create and update its CRDs on startup
  # Only for prometheusOperator.image.tag < v0.39.0
  manageCrds: true

  tlsProxy:
    enabled: true
    image:
      repository: squareup/ghostunnel
      tag: v1.5.2
      sha: ""
      pullPolicy: IfNotPresent
    resources: {}

  ## Admission webhook support for PrometheusRules resources added in Prometheus Operator 0.30 can be enabled to prevent incorrectly formatted
  ## rules from making their way into prometheus and potentially preventing the container from starting
  admissionWebhooks:
    failurePolicy: Fail
    enabled: true
    ## If enabled, generate a self-signed certificate, then patch the webhook configurations with the generated data.
    ## On chart upgrades (or if the secret exists) the cert will not be re-generated. You can use this to provide your own
    ## certs ahead of time if you wish.
    ##
    patch:
      enabled: true
      image:
        repository: jettech/kube-webhook-certgen
        tag: v1.2.1
        sha: ""
        pullPolicy: IfNotPresent
      resources: {}
      # -- Provide a priority class name to the webhook patching job
      priorityClassName: ""
      podAnnotations: {}
      nodeSelector: {}
      affinity: {}
      tolerations: []

  # -- Namespaces to scope the interaction of the Prometheus Operator and the apiserver (allow list).
  # This is mutually exclusive with denyNamespaces. Setting this to an empty object will disable the configuration
  namespaces: {}
    # releaseNamespace: true
    # additional:
    # - kube-system

  # -- Namespaces not to scope the interaction of the Prometheus Operator (deny list).
  denyNamespaces: []

  # -- Service account for Prometheus operator to use.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccount:
    create: true
    name: ""

  # -- Configuration for Prometheus operator service
  service:
    annotations: {}
    labels: {}
    clusterIP: ""

    # -- Port to expose on each node
    # Only used if service.type is 'NodePort'
    nodePort: 30080

    nodePortTls: 30443

    # -- Additional ports to open for Prometheus service
    # ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services
    additionalPorts: []

    # -- Loadbalancer IP
    # Only use if service.type is "loadbalancer"
    loadBalancerIP: ""
    loadBalancerSourceRanges: []

    # -- Service type
    # NodePort, ClusterIP, loadbalancer
    type: ClusterIP

    # -- List of IP addresses at which the Prometheus server service is available
    # Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
    externalIPs: []

  # -- Deploy CRDs used by Prometheus Operator.
  createCustomResource: true

  # -- Attempt to clean up CRDs created by Prometheus Operator.
  cleanupCustomResource: false

  # -- Labels to add to the operator pod
  podLabels: {}

  # -- Annotations to add to the operator pod
  podAnnotations: {}

  # -- Assign a PriorityClassName to pods if set
  priorityClassName:

  # -- Define Log Format
  # Use logfmt (default) or json-formatted logging
  logFormat: logfmt

  ## Decrease log verbosity to errors only
  # logLevel: error

  # -- If true, the operator will create and maintain a service for scraping kubelets
  # ref: https://github.com/coreos/prometheus-operator/blob/master/helm/prometheus-operator/README.md
  kubeletService:
    enabled: true
    namespace: kube-system

  # -- Create a servicemonitor for the operator
  serviceMonitor:
    # -- Scrape interval. If not set, the Prometheus default scrape interval is used.
    interval: ""
    # -- Scrape timeout. If not set, the Prometheus default scrape timeout is used.
    scrapeTimeout: ""
    selfMonitor: true

    # -- metric relabel configs to apply to samples before ingestion.
    metricRelabelings: []
    # - action: keep
    #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
    #   sourceLabels: [__name__]

    # -- relabel configs to apply to samples before ingestion.
    relabelings: []
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   targetLabel: nodename
    #   replacement: $1
    #   action: replace

  # -- Resource limits & requests
  resources: {}
  # limits:
  #   cpu: 200m
  #   memory: 200Mi
  # requests:
  #   cpu: 100m
  #   memory: 100Mi

  # -- Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),
  # because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working
  hostNetwork: false

  # -- Define which Nodes the Pods are scheduled on.
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for use with node taints
  # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

  # -- Assign custom affinity rules to the prometheus operator
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kubernetes.io/e2e-az-name
    #         operator: In
    #         values:
    #         - e2e-az1
    #         - e2e-az2

  securityContext:
    fsGroup: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534

  # -- Prometheus-operator image
  image:
    repository: quay.io/prometheus-operator/prometheus-operator
    tag: ""
    sha: ""
    pullPolicy: IfNotPresent

  # -- Prometheus-config-reloader image to use for config and rule reloading
  prometheusConfigReloaderImage:
    repository: quay.io/prometheus-operator/prometheus-config-reloader
    tag: ""
    sha: ""

  # -- Set the prometheus config reloader side-car CPU limit
  configReloaderCpu: 100m

  # -- Set the prometheus config reloader side-car memory limit
  configReloaderMemory: 25Mi

  # -- Hyperkube image to use when cleaning up
  hyperkubeImage:
    repository: k8s.gcr.io/hyperkube
    tag: v1.16.12
    sha: ""
    pullPolicy: IfNotPresent
