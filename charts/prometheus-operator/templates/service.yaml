apiVersion: v1
kind: Service
metadata:
  name: {{ template "fullname" . }}
  labels: {{ include "labels" . | nindent 4 }}
{{- if .Values.prometheusOperator.service.labels }}
{{ toYaml .Values.prometheusOperator.service.labels | indent 4 }}
{{- end }}
{{- if .Values.prometheusOperator.service.annotations }}
  annotations:
{{ toYaml .Values.prometheusOperator.service.annotations | indent 4 }}
{{- end }}
spec:
{{- if .Values.prometheusOperator.service.clusterIP }}
  clusterIP: {{ .Values.prometheusOperator.service.clusterIP }}
{{- end }}
{{- if .Values.prometheusOperator.service.externalIPs }}
  externalIPs:
{{ toYaml .Values.prometheusOperator.service.externalIPs | indent 4 }}
{{- end }}
{{- if .Values.prometheusOperator.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.prometheusOperator.service.loadBalancerIP }}
{{- end }}
{{- if .Values.prometheusOperator.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
  {{- range $cidr := .Values.prometheusOperator.service.loadBalancerSourceRanges }}
    - {{ $cidr }}
  {{- end }}
{{- end }}
  ports:
  - name: http
    {{- if eq .Values.prometheusOperator.service.type "NodePort" }}
    nodePort: {{ .Values.prometheusOperator.service.nodePort }}
    {{- end }}
    port: 8080
    targetPort: http
  selector: {{ include "matchLabels" . | nindent 4 }}
  type: "{{ .Values.prometheusOperator.service.type }}"
